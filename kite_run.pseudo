early return error handling (samples, sample rate, instance is NULL)

set constant minimum sub-block start to 0.25 * sample rate (0.25 seconds)
set constant maximum sub-block end to minimum sub-block start + 2 * sample rate (2 seconds)

setup an output index = 0
setup a sub-block start position = 0
setup a sub-block end position = 0
setup a random number upper bound = 0
setup a random number lower bound = 0
initialize a samples remaining count = total samples

while output index < total samples

	random number lower bound = minimum sub-block start
	random number upper bound = maximum sub-block end

	if samples remaining is less than or equal to 2 * minumum sub-block start, then
		set sub-block start position to 0
		set sub-block end position to samples remaining - 1
	endif

	else if sample remaining is less than or equal to maximum sub-block end, then
		set the random number upper bound to samples remaining - minimum sub-block start
		get a random number for the sub-block start position using random number lower bound and random number upper bound
		set sub-block end position to samples remaining - 1	
	endif

	otherwise,
		get a random number for the sub-block start position using random number lower bound and random number upper bound
		set the random number lower bound to sub-block start position + minimum sub-block start
		if samples remaining is less than or equal to sub-block start position + maximum sub-block end minus minimum sub-block start, then
			set the random number upper bound to samples remaining - 1
		otherwise,
			set the random number upper bound to sub-block start position + maximum sub-block end minus sub-block start - 1
		get a random number for the sub-block end position using random number lower bound and random number upper bound
	endif
		
	setup a switch (flag) reverse for reversing the sub-block or not
	get an on or off value randomly for reverse 

	if reverse is ON
		apply reverse effect to the sub-block left channel
		apply reverse effect to the sub-block right channel
	endif

	append the sub-block to the output buffer for left channel
	
	append the sub-block to the output buffer for the right channel

	calculate the number of samples copied
	stup a start position index into the input buffer to copy over the sub-block just copied

	copy samples_copied number of samples from the end of samples remaining in the input to the section of input just copied

	increase the output index samples_copied

	samples remaining -= samples_copied

end loop
